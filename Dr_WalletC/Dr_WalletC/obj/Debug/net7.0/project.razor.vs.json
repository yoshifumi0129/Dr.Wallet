{"SerializedFilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\obj\\Debug\\net7.0\\project.razor.vs.json","FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Dr_WalletC.csproj","Configuration":{"ConfigurationName":"MVC-3.0","LanguageVersion":"7.0","Extensions":[{"ExtensionName":"MVC-3.0"}]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":-1323637323,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.LoginDisplay","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoginDisplay"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.LoginDisplay","Common.TypeNameIdentifier":"LoginDisplay","Common.TypeNamespace":"Dr_WalletC.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":2020591103,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.LoginDisplay","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Shared.LoginDisplay"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.LoginDisplay","Common.TypeNameIdentifier":"LoginDisplay","Common.TypeNamespace":"Dr_WalletC.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1448515053,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.MainLayout","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Body","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"Dr_WalletC.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-921885088,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.MainLayout","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Body","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"Dr_WalletC.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1506694337,"Kind":"Components.ChildContent","Name":"Dr_WalletC.Shared.MainLayout.Body","AssemblyName":"Dr_WalletC","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"Dr_WalletC.Shared","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1209426104,"Kind":"Components.ChildContent","Name":"Dr_WalletC.Shared.MainLayout.Body","AssemblyName":"Dr_WalletC","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"Dr_WalletC.Shared.MainLayout"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"Dr_WalletC.Shared","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":940090454,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.Chart","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Chart"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.Chart","Common.TypeNameIdentifier":"Chart","Common.TypeNamespace":"Dr_WalletC.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":1109449963,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.Chart","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Shared.Chart"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.Chart","Common.TypeNameIdentifier":"Chart","Common.TypeNamespace":"Dr_WalletC.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-545767180,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.ChartPie","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartPie"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.ChartPie","Common.TypeNameIdentifier":"ChartPie","Common.TypeNamespace":"Dr_WalletC.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-1057638712,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.ChartPie","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Shared.ChartPie"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.ChartPie","Common.TypeNameIdentifier":"ChartPie","Common.TypeNamespace":"Dr_WalletC.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-93562845,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.SurveyPrompt","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt","Common.TypeNamespace":"Dr_WalletC.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-1967047882,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.SurveyPrompt","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt","Common.TypeNamespace":"Dr_WalletC.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":243460230,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.NavMenu","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu","Common.TypeNamespace":"Dr_WalletC.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-1975069116,"Kind":"Components.Component","Name":"Dr_WalletC.Shared.NavMenu","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Shared.NavMenu"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu","Common.TypeNamespace":"Dr_WalletC.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":631484886,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Tally","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Tally"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Tally","Common.TypeNameIdentifier":"Tally","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":1190302841,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Tally","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.Tally"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Tally","Common.TypeNameIdentifier":"Tally","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":134612246,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Index","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Index","Common.TypeNameIdentifier":"Index","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-64852161,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Index","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.Index"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Index","Common.TypeNameIdentifier":"Index","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2052697362,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.BopForm","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BopForm"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.BopForm","Common.TypeNameIdentifier":"BopForm","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":1569559439,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.BopForm","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.BopForm"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.BopForm","Common.TypeNameIdentifier":"BopForm","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1091272430,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.FetchData","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FetchData"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.FetchData","Common.TypeNameIdentifier":"FetchData","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":1856188621,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.FetchData","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.FetchData"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.FetchData","Common.TypeNameIdentifier":"FetchData","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1211215500,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Summary","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Summary"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Summary","Common.TypeNameIdentifier":"Summary","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":1689791945,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Summary","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.Summary"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Summary","Common.TypeNameIdentifier":"Summary","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-574879205,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Counter","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Counter"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Counter","Common.TypeNameIdentifier":"Counter","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-1216129572,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Counter","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.Counter"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Counter","Common.TypeNameIdentifier":"Counter","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-304760142,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Entry","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Entry"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Entry","Common.TypeNameIdentifier":"Entry","Common.TypeNamespace":"Dr_WalletC.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":246715951,"Kind":"Components.Component","Name":"Dr_WalletC.Pages.Entry","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.Pages.Entry"}],"Metadata":{"Common.TypeName":"Dr_WalletC.Pages.Entry","Common.TypeNameIdentifier":"Entry","Common.TypeNamespace":"Dr_WalletC.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1531577893,"Kind":"Components.Component","Name":"Dr_WalletC.App","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Common.TypeName":"Dr_WalletC.App","Common.TypeNameIdentifier":"App","Common.TypeNamespace":"Dr_WalletC","Runtime.Name":"Components.IComponent"}},{"HashCode":-187938723,"Kind":"Components.Component","Name":"Dr_WalletC.App","AssemblyName":"Dr_WalletC","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dr_WalletC.App"}],"Metadata":{"Common.TypeName":"Dr_WalletC.App","Common.TypeNameIdentifier":"App","Common.TypeNamespace":"Dr_WalletC","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":600300187,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-450791174,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1659049326,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":-2067093338,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1602723046,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":109476351,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1127560569,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":6310419,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-97470475,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":-1591375188,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":529893422,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-283371522,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1730663890,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2080400133,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1428985557,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Authorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2020738019,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Authorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2013499727,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":621119194,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-472966043,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":859759164,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-113265668,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1063076882,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1129170747,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataManager","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.DataManager\">\r\n            <summary>\r\n            The DataManager is a data management component used for performing data operations in applications.\r\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"HttpClientInstance","Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AdaptorInstance","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by <see cref=\"T:Syncfusion.Blazor.Data.SfDataManager\" /> component.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description>\r\n            GraphQLAdaptor provides ability to consume and manipulate data from GraphQL services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description> GraphQLAdaptor provides ability to consume and manipulate data from GraphQL service.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors"}},{"Kind":"Components.Component","Name":"GraphQLAdaptorOptions","TypeName":"Syncfusion.Blazor.Data.GraphQLAdaptorOptions","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.GraphQLAdaptorOptions\">\r\n            <summary>\r\n            Gets or Sets the properties to be specified for GraphQLAdaptor.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphQLAdaptorOptions","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.GraphQLAdaptorOptions"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"DataAdaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InsertUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"RemoveUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UpdateUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CrudUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"BatchUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Json","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Headers","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeTillExpiration","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CachingPageSize","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableCaching","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"RequestType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Key","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CrossDomain","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Jsonp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Offline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiresFormat","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.DataManager","Common.TypeNameIdentifier":"DataManager","Common.TypeNamespace":"Syncfusion.Blazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-1410999674,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataManager","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.DataManager\">\r\n            <summary>\r\n            The DataManager is a data management component used for performing data operations in applications.\r\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"HttpClientInstance","Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AdaptorInstance","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by <see cref=\"T:Syncfusion.Blazor.Data.SfDataManager\" /> component.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description>\r\n            GraphQLAdaptor provides ability to consume and manipulate data from GraphQL services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description> GraphQLAdaptor provides ability to consume and manipulate data from GraphQL service.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors"}},{"Kind":"Components.Component","Name":"GraphQLAdaptorOptions","TypeName":"Syncfusion.Blazor.Data.GraphQLAdaptorOptions","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.GraphQLAdaptorOptions\">\r\n            <summary>\r\n            Gets or Sets the properties to be specified for GraphQLAdaptor.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphQLAdaptorOptions","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.GraphQLAdaptorOptions"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"DataAdaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InsertUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"RemoveUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UpdateUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CrudUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"BatchUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Json","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Headers","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeTillExpiration","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CachingPageSize","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableCaching","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"RequestType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Key","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CrossDomain","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Jsonp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Offline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiresFormat","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.DataManager","Common.TypeNameIdentifier":"DataManager","Common.TypeNamespace":"Syncfusion.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":843990005,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DataManager"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.DataManager.ChildContent","Common.TypeNameIdentifier":"DataManager","Common.TypeNamespace":"Syncfusion.Blazor","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":520023064,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DataManager"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.DataManager.ChildContent","Common.TypeNameIdentifier":"DataManager","Common.TypeNamespace":"Syncfusion.Blazor","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1350703340,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Data.SfDataManager","AssemblyName":"Syncfusion.Blazor.Data","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"HttpClientInstance","Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AdaptorInstance","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by <see cref=\"T:Syncfusion.Blazor.Data.SfDataManager\" /> component.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description>\r\n            GraphQLAdaptor provides ability to consume and manipulate data from GraphQL services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description> GraphQLAdaptor provides ability to consume and manipulate data from GraphQL service.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors"}},{"Kind":"Components.Component","Name":"GraphQLAdaptorOptions","TypeName":"Syncfusion.Blazor.Data.GraphQLAdaptorOptions","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.GraphQLAdaptorOptions\">\r\n            <summary>\r\n            Gets or Sets the properties to be specified for GraphQLAdaptor.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphQLAdaptorOptions","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.GraphQLAdaptorOptions"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"DataAdaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InsertUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"RemoveUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UpdateUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CrudUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"BatchUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Json","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Headers","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeTillExpiration","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CachingPageSize","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableCaching","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"RequestType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Key","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CrossDomain","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Jsonp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Offline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiresFormat","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager","Common.TypeNameIdentifier":"SfDataManager","Common.TypeNamespace":"Syncfusion.Blazor.Data","Runtime.Name":"Components.IComponent"}},{"HashCode":1323563826,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Data.SfDataManager","AssemblyName":"Syncfusion.Blazor.Data","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Data.SfDataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"HttpClientInstance","Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AdaptorInstance","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by <see cref=\"T:Syncfusion.Blazor.Data.SfDataManager\" /> component.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description>\r\n            GraphQLAdaptor provides ability to consume and manipulate data from GraphQL services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>GraphQLAdaptor</term>\r\n            <description> GraphQLAdaptor provides ability to consume and manipulate data from GraphQL service.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Adaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors"}},{"Kind":"Components.Component","Name":"GraphQLAdaptorOptions","TypeName":"Syncfusion.Blazor.Data.GraphQLAdaptorOptions","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.GraphQLAdaptorOptions\">\r\n            <summary>\r\n            Gets or Sets the properties to be specified for GraphQLAdaptor.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphQLAdaptorOptions","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.GraphQLAdaptorOptions"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"DataAdaptor","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InsertUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"RemoveUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UpdateUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CrudUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"BatchUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Json","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Headers","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeTillExpiration","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CachingPageSize","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableCaching","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"RequestType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Key","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CrossDomain","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Jsonp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DataType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Offline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiresFormat","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager","Common.TypeNameIdentifier":"SfDataManager","Common.TypeNamespace":"Syncfusion.Blazor.Data","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-365810931,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDataManager"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","Common.TypeNameIdentifier":"SfDataManager","Common.TypeNamespace":"Syncfusion.Blazor.Data","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-701905811,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Data.SfDataManager"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","Common.TypeNameIdentifier":"SfDataManager","Common.TypeNamespace":"Syncfusion.Blazor.Data","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":991528684,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.JSInteropAdaptor","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.JSInteropAdaptor\">\r\n            <summary>\r\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"JSInteropAdaptor"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Internal.JSInteropAdaptor","Common.TypeNameIdentifier":"JSInteropAdaptor","Common.TypeNamespace":"Syncfusion.Blazor.Internal","Runtime.Name":"Components.IComponent"}},{"HashCode":-1372173055,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.JSInteropAdaptor","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.JSInteropAdaptor\">\r\n            <summary>\r\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.JSInteropAdaptor"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Internal.JSInteropAdaptor","Common.TypeNameIdentifier":"JSInteropAdaptor","Common.TypeNamespace":"Syncfusion.Blazor.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1818027824,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.SfMediaQuery\">\r\n            <summary>\r\n            The Blazor Media Query component allows developers to create responsive layouts.\r\n            The component tracks changes in the browser size and notifies when the browser size matches the specified media query.\r\n            The <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> class is used to store information about each media query breakpoint, including the <c>Breakpoint</c> name and the <c>MediaQuery</c> itself. \r\n            The <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> property returns the <c>Breakpoint</c> of the <c>MediaBreakpoint</c> in the <c>MediaBreakpoints</c> collection that matches the current browser size. \r\n            This allows developers to easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            @if (String.IsNullOrEmpty(activeBreakpoint))\r\n            {\r\n                <label>Loading...</label>\r\n            }\r\n            else\r\n            {\r\n                @if(activeBreakpoint == \"Small\")\r\n                {\r\n                    <button>Mobile</button>\r\n                }\r\n                else\r\n                {\r\n                    <button>Desktop</button>\r\n                }\r\n            }\r\n            <SfMediaQuery @bind-ActiveBreakpoint=\"@activeBreakpoint\"></SfMediaQuery>\r\n            @code {\r\n                private string activeBreakpoint;\r\n            }\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMediaQuery"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveBreakpoint","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\">\r\n            <summary>\r\n            Gets the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the current browser size.\r\n            Based on the <c>ActiveBreakpoint</c>, developers can easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <value>\r\n            A string value that represents the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the browser size.\r\n            The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveBreakpoint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MediaBreakpoints","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.MediaBreakpoint>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\">\r\n            <summary>\r\n            Gets or sets the collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is set when a <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> matches with the current browser size from this collection.\r\n            </summary>\r\n            <value>\r\n            A collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            The defaul value is empty collection.\r\n            </value>\r\n            <remarks>\r\n            If <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> is not specified, <see cref=\"T:Syncfusion.Blazor.SfMediaQuery\" /> will use built-in collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Small\" />, <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Medium\" /> and <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Large\" /> media queries.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"MediaBreakpoints","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.MediaBreakpoint>"}},{"Kind":"Components.Component","Name":"ActiveBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpointChanged\">\r\n            <summary>\r\n            Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary>\r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveBreakpointChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.BreakpointChangedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.OnBreakpointChanged\">\r\n            <summary> \r\n             Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary> \r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBreakpointChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.BreakpointChangedEventArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Common.TypeNameIdentifier":"SfMediaQuery","Common.TypeNamespace":"Syncfusion.Blazor","Runtime.Name":"Components.IComponent"}},{"HashCode":-235304924,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.SfMediaQuery\">\r\n            <summary>\r\n            The Blazor Media Query component allows developers to create responsive layouts.\r\n            The component tracks changes in the browser size and notifies when the browser size matches the specified media query.\r\n            The <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> class is used to store information about each media query breakpoint, including the <c>Breakpoint</c> name and the <c>MediaQuery</c> itself. \r\n            The <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> property returns the <c>Breakpoint</c> of the <c>MediaBreakpoint</c> in the <c>MediaBreakpoints</c> collection that matches the current browser size. \r\n            This allows developers to easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            @if (String.IsNullOrEmpty(activeBreakpoint))\r\n            {\r\n                <label>Loading...</label>\r\n            }\r\n            else\r\n            {\r\n                @if(activeBreakpoint == \"Small\")\r\n                {\r\n                    <button>Mobile</button>\r\n                }\r\n                else\r\n                {\r\n                    <button>Desktop</button>\r\n                }\r\n            }\r\n            <SfMediaQuery @bind-ActiveBreakpoint=\"@activeBreakpoint\"></SfMediaQuery>\r\n            @code {\r\n                private string activeBreakpoint;\r\n            }\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SfMediaQuery"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveBreakpoint","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\">\r\n            <summary>\r\n            Gets the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the current browser size.\r\n            Based on the <c>ActiveBreakpoint</c>, developers can easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <value>\r\n            A string value that represents the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the browser size.\r\n            The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveBreakpoint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MediaBreakpoints","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.MediaBreakpoint>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\">\r\n            <summary>\r\n            Gets or sets the collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is set when a <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> matches with the current browser size from this collection.\r\n            </summary>\r\n            <value>\r\n            A collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            The defaul value is empty collection.\r\n            </value>\r\n            <remarks>\r\n            If <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> is not specified, <see cref=\"T:Syncfusion.Blazor.SfMediaQuery\" /> will use built-in collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Small\" />, <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Medium\" /> and <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Large\" /> media queries.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"MediaBreakpoints","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.MediaBreakpoint>"}},{"Kind":"Components.Component","Name":"ActiveBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpointChanged\">\r\n            <summary>\r\n            Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary>\r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveBreakpointChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.BreakpointChangedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.OnBreakpointChanged\">\r\n            <summary> \r\n             Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary> \r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBreakpointChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.BreakpointChangedEventArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Common.TypeNameIdentifier":"SfMediaQuery","Common.TypeNamespace":"Syncfusion.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1400106403,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Core._Imports","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Core._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"Syncfusion.Blazor.Core","Runtime.Name":"Components.IComponent"}},{"HashCode":1538870127,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Core._Imports","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Core._Imports"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Core._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"Syncfusion.Blazor.Core","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1960468676,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.ModuleInitComponent","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.ModuleInitComponent\">\r\n            <summary>\r\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ModuleInitComponent"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Internal.ModuleInitComponent","Common.TypeNameIdentifier":"ModuleInitComponent","Common.TypeNamespace":"Syncfusion.Blazor.Internal","Runtime.Name":"Components.IComponent"}},{"HashCode":-1240391731,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.ModuleInitComponent","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.ModuleInitComponent\">\r\n            <summary>\r\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.ModuleInitComponent"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Internal.ModuleInitComponent","Common.TypeNameIdentifier":"ModuleInitComponent","Common.TypeNamespace":"Syncfusion.Blazor.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1976229550,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":191090756,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":421419917,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":226510491,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2065312680,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-350659821,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1258965888,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1020867059,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1382592640,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":959106530,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1394710171,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":2117387803,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1831010680,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNameIdentifier":"InputRadio","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":748163635,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNameIdentifier":"InputRadio","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":553938885,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-240189885,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-329149034,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2051182940,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":508662150,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":92454017,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-761095015,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":85331601,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1127546831,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":1412090241,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1984013923,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-283689260,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-245684300,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNameIdentifier":"ValidationMessage","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1528528215,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNameIdentifier":"ValidationMessage","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1959080929,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":1490654527,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2012395568,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1759321182,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1839350250,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavigationLock","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavigationLock\">\r\n            <summary>\r\n            A component that can be used to intercept navigation events. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavigationLock"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeInternalNavigation","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.OnBeforeInternalNavigation\">\r\n            <summary>\r\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBeforeInternalNavigation","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ConfirmExternalNavigation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.ConfirmExternalNavigation\">\r\n            <summary>\r\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\r\n            external navigations.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ConfirmExternalNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavigationLock","Common.TypeNameIdentifier":"NavigationLock","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1619313231,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavigationLock","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavigationLock\">\r\n            <summary>\r\n            A component that can be used to intercept navigation events. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavigationLock"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeInternalNavigation","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.OnBeforeInternalNavigation\">\r\n            <summary>\r\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBeforeInternalNavigation","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ConfirmExternalNavigation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.ConfirmExternalNavigation\">\r\n            <summary>\r\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\r\n            external navigations.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ConfirmExternalNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavigationLock","Common.TypeNameIdentifier":"NavigationLock","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1380850759,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":642792029,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1920388826,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":792199978,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-230489831,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":128167545,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1689854822,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":779040282,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1266783900,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":550896023,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-886198252,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":-583895305,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":886568814,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":206831603,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1532515791,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":748353587,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1582794375,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1559812008,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":873037395,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ErrorContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":103384670,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ErrorContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1577534888,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TItem","Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"]},"Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SpacerElement","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\">\r\n             <summary>\r\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\r\n             One such element will be rendered before the visible items, and one more after them, using\r\n             an explicit \"height\" style to control the scroll range.\r\n            \r\n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\r\n             an element that requires a specific child tag name, consider setting that here. For example when\r\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpacerElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":950796927,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TItem","Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"]},"Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SpacerElement","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\">\r\n             <summary>\r\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\r\n             One such element will be rendered before the visible items, and one more after them, using\r\n             an explicit \"height\" style to control the scroll range.\r\n            \r\n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\r\n             an element that requires a specific child tag name, consider setting that here. For example when\r\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpacerElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-514167269,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":215248206,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1800818476,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2112976254,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1807588775,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Placeholder"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1762038415,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Placeholder"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":112112172,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.CascadingValue<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-2006353105,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.CascadingValue<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-889459120,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1095368138,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":816413986,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":1299178003,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":443104849,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":2117237878,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1467088548,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-752363043,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1158605894,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":-1575418860,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":251306581,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1275292906,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1082338626,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-555496463,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":23965824,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Found"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-523621034,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Found"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1637319012,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1087896449,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":773028279,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutEvents","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.DashboardLayoutEvents\">\r\n            <summary>\r\n            Specifies the DashboardLayout events.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DashboardLayoutEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Changed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ChangeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Changed\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the panel's position are changed.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            You can capture this event to detect the panel position changes.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Changed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Created\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the DashboardLayout is created.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            You can update panel data or perform required action when the component is created.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Created","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Destroyed\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the DashboardLayout is destroyed.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n             Required actions can be performed once the component is destroyed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Destroyed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.DragStartArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStart\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel is about to drag.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel drag action is started.Panel drag can be prevented in required cases through this event.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDragStart","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.DragStartArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.DragStopArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStop\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a dragged panel is dropped.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel drag action is stopped.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDragStop","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.DragStopArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Resizing\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel is being resized continuously.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel is being resized.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Resizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStart\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel is started to resize.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel resize action is started.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStart","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStop\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel resize ends.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel resize action is stopped.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStop","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnWindowResize","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnWindowResize\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when re-sizing the window.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the window resize action takes place. Panels can be refreshed during window resize through this event callback.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnWindowResize","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutEvents","Common.TypeNameIdentifier":"DashboardLayoutEvents","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":2103478359,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutEvents","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.DashboardLayoutEvents\">\r\n            <summary>\r\n            Specifies the DashboardLayout events.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.DashboardLayoutEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Changed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ChangeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Changed\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the panel's position are changed.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            You can capture this event to detect the panel position changes.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Changed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Created\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the DashboardLayout is created.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            You can update panel data or perform required action when the component is created.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Created","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Destroyed\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the DashboardLayout is destroyed.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n             Required actions can be performed once the component is destroyed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Destroyed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.DragStartArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStart\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel is about to drag.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel drag action is started.Panel drag can be prevented in required cases through this event.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDragStart","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.DragStartArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.DragStopArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStop\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a dragged panel is dropped.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel drag action is stopped.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDragStop","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.DragStopArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Resizing\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel is being resized continuously.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel is being resized.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Resizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStart\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel is started to resize.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel resize action is started.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStart","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStop\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a panel resize ends.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the panel resize action is stopped.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStop","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnWindowResize","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnWindowResize\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when re-sizing the window.\r\n            </summary>\r\n            <value>\r\n            An event callback function.\r\n            </value>\r\n            <remarks>\r\n            Helps to identify that the window resize action takes place. Panels can be refreshed during window resize through this event callback.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnWindowResize","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutEvents","Common.TypeNameIdentifier":"DashboardLayoutEvents","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1810877126,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.DashboardLayoutPanel\">\r\n            <summary>\r\n            Specifies the DashboardLayoutPanel.\r\n            </summary>\r\n            <summary>\r\n            DashboardLayout panel.\r\n            </summary>\r\n            <summary>\r\n            Defines the DashboardLayout panel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DashboardLayoutPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent\">\r\n            <summary>\r\n            Defines the ChildContent of the panels.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate\">\r\n            <summary>\r\n            Gets or sets the HeaderTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The header template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the ContentTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The panel template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.AllowDragging\">\r\n            <summary>\r\n            Gets or sets the dragging panel.\r\n            </summary>\r\n            <value>\r\n            `false` if dragging must be restricted. The default value in <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDragging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Col","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Col\">\r\n            <summary>\r\n            Defines the column value where the panel to be placed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Col","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Column","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Column\">\r\n            <summary>\r\n            Gets or sets the column value where the panel to be placed.\r\n            </summary>\r\n            <value>\r\n            Accepts an integer value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's content.\r\n            </summary>\r\n            <value>\r\n            The panel content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.CssClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name that can be appended with each panel element.\r\n            </summary>\r\n            <value>\r\n            Custom class names can be added. The default value in <c>String.Empty</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Enabled\">\r\n            <summary>\r\n            Gets or sets whether the panel should be enabled or not.\r\n            </summary>\r\n            <value>\r\n            `false` if the panels must be disabled. The default value in <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's header.\r\n            </summary>\r\n            <value>\r\n            The header content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Id\">\r\n            <summary>\r\n            Gets or sets the id of the panel.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>String.Empty</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxSizeX","TypeName":"System.Int32?","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeX\">\r\n            <summary>\r\n            Gets or sets the maximum width of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSizeX","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxSizeY","TypeName":"System.Int32?","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeY\">\r\n            <summary>\r\n            Gets or sets the maximum height of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSizeY","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinSizeX","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeX\">\r\n            <summary>\r\n            Gets or sets the minimum width of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MinSizeX","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MinSizeY","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeY\">\r\n            <summary>\r\n            Gets or sets the minimum height of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MinSizeY","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Row","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Row\">\r\n            <summary>\r\n            Gets or sets a row value where the panel should be placed.\r\n            </summary>\r\n            <value>\r\n            Accepts an integer value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Row","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SizeX","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeX\">\r\n            <summary>\r\n            Gets or sets the width of the panel in the layout in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"SizeX","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SizeY","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeY\">\r\n            <summary>\r\n            Gets or sets the height of the panel in the layout in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"SizeY","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ZIndex\">\r\n            <summary>\r\n            Gets or sets the z-index of the panel.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1000</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ZIndex","Common.GloballyQualifiedTypeName":"global::System.Double"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":1293022371,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.DashboardLayoutPanel\">\r\n            <summary>\r\n            Specifies the DashboardLayoutPanel.\r\n            </summary>\r\n            <summary>\r\n            DashboardLayout panel.\r\n            </summary>\r\n            <summary>\r\n            Defines the DashboardLayout panel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent\">\r\n            <summary>\r\n            Defines the ChildContent of the panels.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate\">\r\n            <summary>\r\n            Gets or sets the HeaderTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The header template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the ContentTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The panel template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.AllowDragging\">\r\n            <summary>\r\n            Gets or sets the dragging panel.\r\n            </summary>\r\n            <value>\r\n            `false` if dragging must be restricted. The default value in <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDragging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Col","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Col\">\r\n            <summary>\r\n            Defines the column value where the panel to be placed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Col","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Column","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Column\">\r\n            <summary>\r\n            Gets or sets the column value where the panel to be placed.\r\n            </summary>\r\n            <value>\r\n            Accepts an integer value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Column","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's content.\r\n            </summary>\r\n            <value>\r\n            The panel content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.CssClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name that can be appended with each panel element.\r\n            </summary>\r\n            <value>\r\n            Custom class names can be added. The default value in <c>String.Empty</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Enabled\">\r\n            <summary>\r\n            Gets or sets whether the panel should be enabled or not.\r\n            </summary>\r\n            <value>\r\n            `false` if the panels must be disabled. The default value in <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's header.\r\n            </summary>\r\n            <value>\r\n            The header content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Header","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Id\">\r\n            <summary>\r\n            Gets or sets the id of the panel.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>String.Empty</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxSizeX","TypeName":"System.Int32?","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeX\">\r\n            <summary>\r\n            Gets or sets the maximum width of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSizeX","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MaxSizeY","TypeName":"System.Int32?","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeY\">\r\n            <summary>\r\n            Gets or sets the maximum height of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSizeY","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinSizeX","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeX\">\r\n            <summary>\r\n            Gets or sets the minimum width of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MinSizeX","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MinSizeY","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeY\">\r\n            <summary>\r\n            Gets or sets the minimum height of the panel in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"MinSizeY","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Row","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Row\">\r\n            <summary>\r\n            Gets or sets a row value where the panel should be placed.\r\n            </summary>\r\n            <value>\r\n            Accepts an integer value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Row","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SizeX","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeX\">\r\n            <summary>\r\n            Gets or sets the width of the panel in the layout in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"SizeX","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SizeY","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeY\">\r\n            <summary>\r\n            Gets or sets the height of the panel in the layout in cells count.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"SizeY","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ZIndex\">\r\n            <summary>\r\n            Gets or sets the z-index of the panel.\r\n            </summary>\r\n            <value>\r\n            The default value in <c>1000</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ZIndex","Common.GloballyQualifiedTypeName":"global::System.Double"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1584420629,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent\">\r\n            <summary>\r\n            Defines the ChildContent of the panels.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1606303034,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent\">\r\n            <summary>\r\n            Defines the ChildContent of the panels.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":709165021,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate\">\r\n            <summary>\r\n            Gets or sets the HeaderTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The header template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":189101149,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate\">\r\n            <summary>\r\n            Gets or sets the HeaderTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The header template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":138283085,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the ContentTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The panel template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-957605485,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the ContentTemplate of the panels.\r\n            </summary>\r\n            <value>\r\n            The panel template content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":791441874,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's content.\r\n            </summary>\r\n            <value>\r\n            The panel content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1752951622,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's content.\r\n            </summary>\r\n            <value>\r\n            The panel content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1247052688,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's header.\r\n            </summary>\r\n            <value>\r\n            The header content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1975521171,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header\">\r\n            <summary>\r\n            Gets or sets the value that should be displayed as the panel's header.\r\n            </summary>\r\n            <value>\r\n            The header content. The default value in <c>null</c>.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header","Common.TypeNameIdentifier":"DashboardLayoutPanel","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1078330978,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.DashboardLayoutPanels\">\r\n            <summary>\r\n            Specifies the DashboardLayoutPanels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DashboardLayoutPanels"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels","Common.TypeNameIdentifier":"DashboardLayoutPanels","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":2013674774,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.DashboardLayoutPanels\">\r\n            <summary>\r\n            Specifies the DashboardLayoutPanels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels","Common.TypeNameIdentifier":"DashboardLayoutPanels","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":436284252,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DashboardLayoutPanels"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent","Common.TypeNameIdentifier":"DashboardLayoutPanels","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":740023188,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent","Common.TypeNameIdentifier":"DashboardLayoutPanels","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1718287247,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SfDashboardLayout","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SfDashboardLayout\">\r\n            <summary>\r\n            The DashboardLayout is a grid structured layout component, that helps to create a dashboard with panels.\r\n            Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\r\n            that allows users to easily place the panels at a desired position within the grid layout.\r\n            </summary>\r\n            <summary>\r\n            Specifies the DashboardLayout component.\r\n            </summary>\r\n            <summary>\r\n            Specifies the DashboardLayout component.\r\n            </summary>\r\n            <summary>\r\n            Specifies the DashboardLayout component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDashboardLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ID\">\r\n            <summary>\r\n            Gets or sets the id attribute for the DashboardLayout element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowDragging\">\r\n            <summary>\r\n            Gets or sets a value that specifies whether the DashboardLayout permits the reordering of panels through dragging.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the drag option can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDragging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowFloating","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating\">\r\n            <summary>\r\n            Gets or sets a value that specifies whether the DashboardLayout panels must fill the available cells while dragging or resizing.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the floating option can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n            <remarks>\r\n             If <see cref=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating\" /> is set to true, then the DashboardLayout will automatically move the panels upwards to fill the empty available cells while dragging or resizing the panels.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowFloating","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowResizing\">\r\n            <summary>\r\n            Gets or sets a value that specifies whether the panels in DashboardLayout can be resized.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the resizing option can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowResizing","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CellAspectRatio","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellAspectRatio\">\r\n            <summary>\r\n            Gets or sets the cell aspect ratio of the panel.\r\n            </summary>\r\n            <value>\r\n            A double value that representing the cell aspect ratio of panel in component. The default value is <c>1</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" CellAspectRatio=\"2\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"CellAspectRatio","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"CellSpacing","TypeName":"System.Double[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellSpacing\">\r\n            <summary>\r\n            Gets or sets the spacing between the panels.\r\n            </summary>\r\n            <value>\r\n            An array of double values that defines the spacing between panels of component. The default value is <c>{5, 5}</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" CellSpacing=\"@(new double[]{20 ,20 })\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"CellSpacing","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Columns\">\r\n            <summary>\r\n            Gets or sets a value that determines the number of columns to be created in the DashboardLayout.\r\n            </summary>\r\n            <value>\r\n            Accepts an integer value that representing the number of columns in component. The default value is <c>1</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DraggableHandle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.DraggableHandle\">\r\n            <summary>\r\n            Gets or sets the draggable handle selector which will act as dragging handler for the panels.\r\n            You can enable dragging for a particular element of panel using this property.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" DraggableHandle=\".e-panel-header\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggableHandle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnablePersistence\">\r\n            <summary>\r\n            Gets or sets whether to persist the component's state between page reloads.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the persistence can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"EnablePersistence","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableRtl\">\r\n            <summary>\r\n            Gets or sets whether the right to left direction is enabled for the DashboardLayout component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the right to left direction can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableRtl","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MediaQuery","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.MediaQuery\">\r\n            <summary>\r\n            Gets or sets the media query value where the DashboardLayout becomes stacked layout when the resolution meets.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is `max-width:600px`.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" MediaQuery=\" max-width:800px\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"MediaQuery","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ResizableHandles","TypeName":"Syncfusion.Blazor.Layouts.ResizableHandle","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizableHandles\">\r\n            <summary>\r\n            Gets or sets the resizing handles directions used for resizing the panels.\r\n            </summary>\r\n            <value>\r\n            Resize directions of the DashboardLayout panels. The default resize direction is 'south-east'.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" AllowResizing=\"true\" ResizableHandles=\"ResizableHandle.NorthEast\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"ResizableHandles","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.ResizableHandle"}},{"Kind":"Components.Component","Name":"ShowGridLines","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ShowGridLines\">\r\n            <summary>\r\n            Gets or sets the visibility of grid lines for panels within the DashboardLayout.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the grid lines should be shown. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowGridLines","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfDashboardLayout","Common.TypeNameIdentifier":"SfDashboardLayout","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":440165637,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SfDashboardLayout","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SfDashboardLayout\">\r\n            <summary>\r\n            The DashboardLayout is a grid structured layout component, that helps to create a dashboard with panels.\r\n            Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\r\n            that allows users to easily place the panels at a desired position within the grid layout.\r\n            </summary>\r\n            <summary>\r\n            Specifies the DashboardLayout component.\r\n            </summary>\r\n            <summary>\r\n            Specifies the DashboardLayout component.\r\n            </summary>\r\n            <summary>\r\n            Specifies the DashboardLayout component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SfDashboardLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ID\">\r\n            <summary>\r\n            Gets or sets the id attribute for the DashboardLayout element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowDragging\">\r\n            <summary>\r\n            Gets or sets a value that specifies whether the DashboardLayout permits the reordering of panels through dragging.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the drag option can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDragging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowFloating","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating\">\r\n            <summary>\r\n            Gets or sets a value that specifies whether the DashboardLayout panels must fill the available cells while dragging or resizing.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the floating option can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n            <remarks>\r\n             If <see cref=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating\" /> is set to true, then the DashboardLayout will automatically move the panels upwards to fill the empty available cells while dragging or resizing the panels.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowFloating","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowResizing\">\r\n            <summary>\r\n            Gets or sets a value that specifies whether the panels in DashboardLayout can be resized.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the resizing option can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowResizing","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CellAspectRatio","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellAspectRatio\">\r\n            <summary>\r\n            Gets or sets the cell aspect ratio of the panel.\r\n            </summary>\r\n            <value>\r\n            A double value that representing the cell aspect ratio of panel in component. The default value is <c>1</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" CellAspectRatio=\"2\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"CellAspectRatio","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"CellSpacing","TypeName":"System.Double[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellSpacing\">\r\n            <summary>\r\n            Gets or sets the spacing between the panels.\r\n            </summary>\r\n            <value>\r\n            An array of double values that defines the spacing between panels of component. The default value is <c>{5, 5}</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" CellSpacing=\"@(new double[]{20 ,20 })\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"CellSpacing","Common.GloballyQualifiedTypeName":"global::System.Double[]"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Columns\">\r\n            <summary>\r\n            Gets or sets a value that determines the number of columns to be created in the DashboardLayout.\r\n            </summary>\r\n            <value>\r\n            Accepts an integer value that representing the number of columns in component. The default value is <c>1</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DraggableHandle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.DraggableHandle\">\r\n            <summary>\r\n            Gets or sets the draggable handle selector which will act as dragging handler for the panels.\r\n            You can enable dragging for a particular element of panel using this property.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" DraggableHandle=\".e-panel-header\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"DraggableHandle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnablePersistence\">\r\n            <summary>\r\n            Gets or sets whether to persist the component's state between page reloads.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the persistence can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"EnablePersistence","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableRtl\">\r\n            <summary>\r\n            Gets or sets whether the right to left direction is enabled for the DashboardLayout component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the right to left direction can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableRtl","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MediaQuery","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.MediaQuery\">\r\n            <summary>\r\n            Gets or sets the media query value where the DashboardLayout becomes stacked layout when the resolution meets.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is `max-width:600px`.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" MediaQuery=\" max-width:800px\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"MediaQuery","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ResizableHandles","TypeName":"Syncfusion.Blazor.Layouts.ResizableHandle","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizableHandles\">\r\n            <summary>\r\n            Gets or sets the resizing handles directions used for resizing the panels.\r\n            </summary>\r\n            <value>\r\n            Resize directions of the DashboardLayout panels. The default resize direction is 'south-east'.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfDashboardLayout Columns=\"5\" AllowResizing=\"true\" ResizableHandles=\"ResizableHandle.NorthEast\">\r\n              <DashboardLayoutPanels>\r\n               <DashboardLayoutPanel Id=\"one\" Column=\"0\" Row=\"0\">\r\n                   <HeaderTemplate>Panel 1</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n               <DashboardLayoutPanel Id=\"two\" Row=\"1\" Column=\"0\" SizeX=1 SizeY=2>\r\n                   <HeaderTemplate>Panel 2</HeaderTemplate>\r\n               </DashboardLayoutPanel>\r\n             </DashboardLayoutPanels>\r\n            </SfDashboardLayout>      \r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"ResizableHandles","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.ResizableHandle"}},{"Kind":"Components.Component","Name":"ShowGridLines","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ShowGridLines\">\r\n            <summary>\r\n            Gets or sets the visibility of grid lines for panels within the DashboardLayout.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the grid lines should be shown. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowGridLines","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfDashboardLayout","Common.TypeNameIdentifier":"SfDashboardLayout","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":691783594,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDashboardLayout"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent","Common.TypeNameIdentifier":"SfDashboardLayout","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1717348593,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent\">\r\n            <summary>\r\n            Specifies the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.SfDashboardLayout"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent","Common.TypeNameIdentifier":"SfDashboardLayout","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1276040612,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterEvents","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterEvents\">\r\n            <summary>\r\n            Configure the event handlers to handle the events with Splitter component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnCollapse","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnCollapse\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked on the pane collapse action.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnCollapse=\"@OnCollapseHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void OnCollapseHandler(BeforeExpandEventArgs args)\r\n                {\r\n                    if (someCondition)\r\n                    {\r\n                        args.Cancel = true; // Cancel the collapse operation if needed\r\n                    }\r\n                    else\r\n                    {\r\n                        // Perform additional logic\r\n                    }\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCollapse","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnExpand","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnExpand\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked on expanding the panes.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnExpand=\"@OnExpandeHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void OnExpandeHandler(BeforeExpandEventArgs args)\r\n                {\r\n                    if (someCondition)\r\n                    {\r\n                        args.Cancel = true; // Cancel the collapse operation if needed\r\n                    }\r\n                    else\r\n                    {\r\n                        // Perform additional logic\r\n                    }\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OnExpand","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Collapsed\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the panes get collapsed.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnExpand=\"@CollapseHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void CollapseHandler(ExpandedEventArgs args)\r\n                {\r\n                    // Perform additional logic\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Created\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the component is created.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Created","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Expanded\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the panes get expanded.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents Expanded=\"@ExpandedHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void ExpandedHandler(ExpandedEventArgs args)\r\n                {\r\n                    // Perform additional logic\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStart\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the split pane is started to resize.\r\n            </summary>\r\n             <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnResizeStart=\"@OnResizeHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void OnResizeHandler(ResizeEventArgs args)\r\n                {\r\n                    args.Cancel = true; // Perform additional logic\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStart","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStop\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the resizing of split pane is stopped.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStop","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizingEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Destroyed\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the splitter is destroyed with its elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Destroyed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Resizing\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when a split pane is being resized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizingEventArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterEvents","Common.TypeNameIdentifier":"SplitterEvents","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":-929673586,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterEvents","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterEvents\">\r\n            <summary>\r\n            Configure the event handlers to handle the events with Splitter component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnCollapse","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnCollapse\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked on the pane collapse action.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnCollapse=\"@OnCollapseHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void OnCollapseHandler(BeforeExpandEventArgs args)\r\n                {\r\n                    if (someCondition)\r\n                    {\r\n                        args.Cancel = true; // Cancel the collapse operation if needed\r\n                    }\r\n                    else\r\n                    {\r\n                        // Perform additional logic\r\n                    }\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OnCollapse","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnExpand","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnExpand\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked on expanding the panes.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnExpand=\"@OnExpandeHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void OnExpandeHandler(BeforeExpandEventArgs args)\r\n                {\r\n                    if (someCondition)\r\n                    {\r\n                        args.Cancel = true; // Cancel the collapse operation if needed\r\n                    }\r\n                    else\r\n                    {\r\n                        // Perform additional logic\r\n                    }\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OnExpand","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.BeforeExpandEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Collapsed\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the panes get collapsed.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnExpand=\"@CollapseHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void CollapseHandler(ExpandedEventArgs args)\r\n                {\r\n                    // Perform additional logic\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Created\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the component is created.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Created","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Expanded\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the panes get expanded.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents Expanded=\"@ExpandedHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane Collapsible=true>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void ExpandedHandler(ExpandedEventArgs args)\r\n                {\r\n                    // Perform additional logic\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ExpandedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStart\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the split pane is started to resize.\r\n            </summary>\r\n             <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n            <SplitterEvents OnResizeStart=\"@OnResizeHandler\" />\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n             @code{\r\n              private void OnResizeHandler(ResizeEventArgs args)\r\n                {\r\n                    args.Cancel = true; // Perform additional logic\r\n                }\r\n             }\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStart","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResizeStop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStop\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the resizing of split pane is stopped.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResizeStop","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizingEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Destroyed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Destroyed\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the splitter is destroyed with its elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Destroyed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.ResizingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterEvents.Resizing\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when a split pane is being resized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.ResizingEventArgs>","Components.EventCallback":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterEvents","Common.TypeNameIdentifier":"SplitterEvents","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1517983485,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterPane\">\r\n            <summary>\r\n            Configure each pane and its properties to handle the pane behavior.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterPane"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content of the splitter pane element.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the template for the content within the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> component.\r\n            </summary>\r\n            <value>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> that represents the custom content template.\r\n            </value>\r\n            <remarks>\r\n            The content template is a customizable area within the Splitter where you can define custom content.\r\n            By providing a RenderFragment, you can create complex layouts or embed other components within the Splitter's panes.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsed\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is initially collapsed within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is initially collapsed; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When a pane is collapsed, its content is hidden, and only a minimal representation of the pane remains visible.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CollapsedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.CollapsedChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapsedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsible\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is collapsible in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is collapsible; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When a pane is collapsible, users can interact with a control, typically a button or an icon, to collapse or expand the pane.\r\n            \r\n            By setting this property to <c>true</c>, you enable collapsible behavior for the pane. When set to <c>false</c>,\r\n            the pane cannot be collapsed or expanded manually.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Content\">\r\n            <summary>\r\n            Gets or sets the content of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the content to be displayed within the pane.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane Content=\"<div>The ASP.NET Scheduler,facilitates almost all calendar features, thus allowing users to manage their time efficiently </div>\">\r\n                   </SplitterPane>\r\n                   <SplitterPane Content=\"<div>The ASP.NET DataGrid control, or DataTable is a feature-rich control used to display data in a tabular format.</div>\">\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.CssClass\">\r\n            <summary>\r\n            Gets or sets a CSS class string to customize the appearance of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.\r\n            </value>\r\n            <remarks>\r\n            Use this property to apply custom styling to the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" />  component. You can\r\n            define your own CSS classes and use them here to control the visual appearance\r\n            of the component.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Max\">\r\n            <summary>\r\n            Gets or sets the maximum size of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the maximum size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).\r\n            </value>\r\n            <remarks>\r\n            The maxsize property defines the maximum allowable size for the pane. This limits the expansion of the pane\r\n            beyond the specified maximum size.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane Max=\"200px\">\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.MaxChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Min\">\r\n            <summary>\r\n            Gets or sets the minimum size of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the minimum size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).\r\n            </value>\r\n            <remarks>\r\n            The minSize property defines the minimum allowable size for the pane. This prevents the pane from being\r\n            resized to a size smaller than the specified minimum size.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane Min=\"200px\">\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MinChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.MinChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Resizable\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is resizable within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is resizable; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When a pane is resizable, users can interact with its edges to adjust its size. This allows them to\r\n            customize the layout by making panes larger or smaller as needed.\r\n            \r\n            By default, the pane is resizable. Setting this property to <c>false</c> will prevent users from resizing the pane.\r\n            \r\n            You can combine this property with the <see cref=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Min\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Max\" /> properties to define\r\n            the resizing behavior more precisely.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Resizable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Size\">\r\n            <summary>\r\n            Gets or sets the size of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).\r\n            </value>\r\n            <remarks>\r\n            The size property defines the initial size of the pane. The value determines the width or height of the pane,\r\n            depending on the <see cref=\"T:Syncfusion.Blazor.Layouts.Orientation\" /> of the Splitter.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.SizeChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SizeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Visible\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is visible within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is visible; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks> If this property is set to `false`, the pane element will not be shown in the DOM. This property can be used to provide conditional pane rendering in Splitter. </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":1077798321,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterPane\">\r\n            <summary>\r\n            Configure each pane and its properties to handle the pane behavior.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content of the splitter pane element.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the template for the content within the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> component.\r\n            </summary>\r\n            <value>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> that represents the custom content template.\r\n            </value>\r\n            <remarks>\r\n            The content template is a customizable area within the Splitter where you can define custom content.\r\n            By providing a RenderFragment, you can create complex layouts or embed other components within the Splitter's panes.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsed\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is initially collapsed within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is initially collapsed; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When a pane is collapsed, its content is hidden, and only a minimal representation of the pane remains visible.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CollapsedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.CollapsedChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapsedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Collapsible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsible\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is collapsible in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is collapsible; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When a pane is collapsible, users can interact with a control, typically a button or an icon, to collapse or expand the pane.\r\n            \r\n            By setting this property to <c>true</c>, you enable collapsible behavior for the pane. When set to <c>false</c>,\r\n            the pane cannot be collapsed or expanded manually.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Content\">\r\n            <summary>\r\n            Gets or sets the content of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the content to be displayed within the pane.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane Content=\"<div>The ASP.NET Scheduler,facilitates almost all calendar features, thus allowing users to manage their time efficiently </div>\">\r\n                   </SplitterPane>\r\n                   <SplitterPane Content=\"<div>The ASP.NET DataGrid control, or DataTable is a feature-rich control used to display data in a tabular format.</div>\">\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.CssClass\">\r\n            <summary>\r\n            Gets or sets a CSS class string to customize the appearance of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.\r\n            </value>\r\n            <remarks>\r\n            Use this property to apply custom styling to the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" />  component. You can\r\n            define your own CSS classes and use them here to control the visual appearance\r\n            of the component.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Max\">\r\n            <summary>\r\n            Gets or sets the maximum size of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the maximum size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).\r\n            </value>\r\n            <remarks>\r\n            The maxsize property defines the maximum allowable size for the pane. This limits the expansion of the pane\r\n            beyond the specified maximum size.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane Max=\"200px\">\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.MaxChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Min\">\r\n            <summary>\r\n            Gets or sets the minimum size of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the minimum size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).\r\n            </value>\r\n            <remarks>\r\n            The minSize property defines the minimum allowable size for the pane. This prevents the pane from being\r\n            resized to a size smaller than the specified minimum size.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane Min=\"200px\">\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MinChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.MinChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Resizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Resizable\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is resizable within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is resizable; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When a pane is resizable, users can interact with its edges to adjust its size. This allows them to\r\n            customize the layout by making panes larger or smaller as needed.\r\n            \r\n            By default, the pane is resizable. Setting this property to <c>false</c> will prevent users from resizing the pane.\r\n            \r\n            You can combine this property with the <see cref=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Min\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Max\" /> properties to define\r\n            the resizing behavior more precisely.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Resizable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Size\">\r\n            <summary>\r\n            Gets or sets the size of the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).\r\n            </value>\r\n            <remarks>\r\n            The size property defines the initial size of the pane. The value determines the width or height of the pane,\r\n            depending on the <see cref=\"T:Syncfusion.Blazor.Layouts.Orientation\" /> of the Splitter.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.SizeChanged\">\r\n            <summary>\r\n            Gets or sets a callback of the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SizeChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.Visible\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the pane is visible within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the pane is visible; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks> If this property is set to `false`, the pane element will not be shown in the DOM. This property can be used to provide conditional pane rendering in Splitter. </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1378176496,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterPane.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content of the splitter pane element.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SplitterPane"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane.ChildContent","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":597344970,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterPane.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content of the splitter pane element.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.SplitterPane"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane.ChildContent","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-956478778,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the template for the content within the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> component.\r\n            </summary>\r\n            <value>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> that represents the custom content template.\r\n            </value>\r\n            <remarks>\r\n            The content template is a customizable area within the Splitter where you can define custom content.\r\n            By providing a RenderFragment, you can create complex layouts or embed other components within the Splitter's panes.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"SplitterPane"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1820224941,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate\">\r\n            <summary>\r\n            Gets or sets the template for the content within the <see cref=\"T:Syncfusion.Blazor.Layouts.SplitterPane\" /> component.\r\n            </summary>\r\n            <value>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> that represents the custom content template.\r\n            </value>\r\n            <remarks>\r\n            The content template is a customizable area within the Splitter where you can define custom content.\r\n            By providing a RenderFragment, you can create complex layouts or embed other components within the Splitter's panes.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Layouts.SplitterPane"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1209060795,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterPanes","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterPanes\">\r\n            <summary>\r\n            Configure one or more panes to construct different layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterPanes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPanes","Common.TypeNameIdentifier":"SplitterPanes","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":1754142168,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterPanes","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterPanes\">\r\n            <summary>\r\n            Configure one or more panes to construct different layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterPanes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPanes","Common.TypeNameIdentifier":"SplitterPanes","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1119632618,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent\">\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SplitterPanes"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent","Common.TypeNameIdentifier":"SplitterPanes","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1065184118,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent\">\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.SplitterPanes"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent","Common.TypeNameIdentifier":"SplitterPanes","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1807168267,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterTemplates","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterTemplates\">\r\n            <summary>\r\n            Configure each pane and its properties to handle the pane behavior.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Separator","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterTemplates.Separator\">\r\n            <summary>\r\n            Specifies the separator icon that can be displayed in the Splitter separator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Separator","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterTemplates","Common.TypeNameIdentifier":"SplitterTemplates","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":1875567451,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SplitterTemplates","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SplitterTemplates\">\r\n            <summary>\r\n            Configure each pane and its properties to handle the pane behavior.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterTemplates"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Separator","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterTemplates.Separator\">\r\n            <summary>\r\n            Specifies the separator icon that can be displayed in the Splitter separator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Separator","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterTemplates","Common.TypeNameIdentifier":"SplitterTemplates","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":177578707,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterTemplates.Separator","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterTemplates.Separator\">\r\n            <summary>\r\n            Specifies the separator icon that can be displayed in the Splitter separator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Separator","ParentTag":"SplitterTemplates"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterTemplates.Separator","Common.TypeNameIdentifier":"SplitterTemplates","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1267441624,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SplitterTemplates.Separator","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SplitterTemplates.Separator\">\r\n            <summary>\r\n            Specifies the separator icon that can be displayed in the Splitter separator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Separator","ParentTag":"Syncfusion.Blazor.Layouts.SplitterTemplates"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterTemplates.Separator","Common.TypeNameIdentifier":"SplitterTemplates","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":564198062,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SfSplitter","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SfSplitter\">\r\n            <summary>\r\n            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter>\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfSplitter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.ID\">\r\n            <summary>\r\n            Gets or sets the unique identifier for <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts a string value. The default value is <c>String.Empty</c>.\r\n            </value>\r\n            <remarks>\r\n            You can specify only unique value.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent\">\r\n            <summary>\r\n            Sets the content for panes of the Splitter.\r\n            </summary>\r\n            <value>\r\n            Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.CssClass\">\r\n            <summary>\r\n            Gets or sets a CSS class string to customize the appearance of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.\r\n            </value>\r\n            <remarks>\r\n            Use this property to apply custom styling to the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" />  component. You can\r\n            define your own CSS classes and use them here to control the visual appearance\r\n            of the component.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnableReversePanes","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.EnableReversePanes\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the order of splitter panes should be reversed.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the splitter panes are reordered. Otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When set to <c>true</c>, the order of the panes within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component will be reversed.\r\n            This means that the right-most or bottom-most pane will appear as the first pane, and the other\r\n            panes will follow in reverse order.\r\n            \r\n            Reversing the pane order can be useful in scenarios where you want to present content in the opposite\r\n            direction, such as creating layouts that flow from right to left or from bottom to top.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableReversePanes","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.EnableRtl\">\r\n            <summary>\r\n            Gets or sets a value indicating whether right-to-left (RTL) mode is enabled for the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if RTL mode is enabled; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When RTL mode is enabled, the content of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component will be presented in a right-to-left\r\n            direction. This affects the positioning and alignment of the splitter panes and other content.\r\n            \r\n            Enabling RTL mode can be useful when designing applications for languages that are written from\r\n            right to left, such as Arabic, Hebrew, or Persian.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableRtl","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Enabled\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component is enabled.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the component is enabled; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When the component is enabled, user interactions and behaviors associated with the\r\n            Splitter, such as resizing panes, are allowed. When disabled, these interactions are\r\n            restricted and the component becomes non-interactive.\r\n            \r\n            By default, the component is enabled. You can set this property to <c>false</c> to prevent\r\n            user interactions temporarily, if needed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.EnablePersistence\">\r\n            <summary>\r\n            Gets or sets a value indicating whether persistence of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component's state is enabled.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if persistence is enabled; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When persistence is enabled, the state of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component is saved and restored across page reloads or navigations. This allows the\r\n            component to remember its previous state and provide a consistent user experience.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EnablePersistence","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Height\">\r\n            <summary>\r\n            Gets or sets the height of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Layouts.Orientation","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Orientation\">\r\n            <summary>\r\n            Gets or sets the orientation of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            An enum value representing the orientation of the Splitter. Possible values are <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Horizontal\" /> and <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Vertical\" />.\r\n            </value>\r\n            <remarks>\r\n            The orientation determines whether the Splitter will arrange its panes horizontally or vertically.\r\n            \r\n            - <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Horizontal\" />: Panes are arranged side by side horizontally.\r\n            - <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Vertical\" />: Panes are arranged one above the other vertically.\r\n            \r\n            Choose the appropriate orientation based on your desired layout and design.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Orientation=\"Orientation.Vertical\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.Orientation"}},{"Kind":"Components.Component","Name":"SeparatorSize","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.SeparatorSize\">\r\n            <summary>\r\n            Gets or sets the size of the separators between panes in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            The size of the separators, specified as a double value.\r\n            </value>\r\n            <remarks>\r\n            The separator size determines the width of the space between adjacent panes within the Splitter component.\r\n            \r\n            Example:\r\n            - Setting SeparatorSize to 10 will create a 10-pixel wide separator between adjacent panes.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter SeparatorSize=\"10\" Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"SeparatorSize","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Width\">\r\n            <summary>\r\n            Gets or sets the width of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n            <remarks>\r\n            The value can be either in pixel or percentage format.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.HtmlAttributes\">\r\n            <summary>\r\n            You can add the additional Html attributes such as id, title, etc., to the splitter element.\r\n            </summary>\r\n            <value>\r\n            A dictionary of additional HTML attributes for the root element of the component.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfSplitter","Common.TypeNameIdentifier":"SfSplitter","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":-1254347957,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SfSplitter","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SfSplitter\">\r\n            <summary>\r\n            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter>\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SfSplitter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.ID\">\r\n            <summary>\r\n            Gets or sets the unique identifier for <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts a string value. The default value is <c>String.Empty</c>.\r\n            </value>\r\n            <remarks>\r\n            You can specify only unique value.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent\">\r\n            <summary>\r\n            Sets the content for panes of the Splitter.\r\n            </summary>\r\n            <value>\r\n            Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.CssClass\">\r\n            <summary>\r\n            Gets or sets a CSS class string to customize the appearance of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.\r\n            </value>\r\n            <remarks>\r\n            Use this property to apply custom styling to the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" />  component. You can\r\n            define your own CSS classes and use them here to control the visual appearance\r\n            of the component.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnableReversePanes","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.EnableReversePanes\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the order of splitter panes should be reversed.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the splitter panes are reordered. Otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When set to <c>true</c>, the order of the panes within the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component will be reversed.\r\n            This means that the right-most or bottom-most pane will appear as the first pane, and the other\r\n            panes will follow in reverse order.\r\n            \r\n            Reversing the pane order can be useful in scenarios where you want to present content in the opposite\r\n            direction, such as creating layouts that flow from right to left or from bottom to top.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableReversePanes","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.EnableRtl\">\r\n            <summary>\r\n            Gets or sets a value indicating whether right-to-left (RTL) mode is enabled for the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if RTL mode is enabled; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When RTL mode is enabled, the content of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component will be presented in a right-to-left\r\n            direction. This affects the positioning and alignment of the splitter panes and other content.\r\n            \r\n            Enabling RTL mode can be useful when designing applications for languages that are written from\r\n            right to left, such as Arabic, Hebrew, or Persian.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EnableRtl","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Enabled\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component is enabled.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the component is enabled; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When the component is enabled, user interactions and behaviors associated with the\r\n            Splitter, such as resizing panes, are allowed. When disabled, these interactions are\r\n            restricted and the component becomes non-interactive.\r\n            \r\n            By default, the component is enabled. You can set this property to <c>false</c> to prevent\r\n            user interactions temporarily, if needed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnablePersistence","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.EnablePersistence\">\r\n            <summary>\r\n            Gets or sets a value indicating whether persistence of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component's state is enabled.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if persistence is enabled; otherwise, <c>false</c>.\r\n            </value>\r\n            <remarks>\r\n            When persistence is enabled, the state of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component is saved and restored across page reloads or navigations. This allows the\r\n            component to remember its previous state and provide a consistent user experience.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EnablePersistence","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Height\">\r\n            <summary>\r\n            Gets or sets the height of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Layouts.Orientation","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Orientation\">\r\n            <summary>\r\n            Gets or sets the orientation of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            An enum value representing the orientation of the Splitter. Possible values are <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Horizontal\" /> and <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Vertical\" />.\r\n            </value>\r\n            <remarks>\r\n            The orientation determines whether the Splitter will arrange its panes horizontally or vertically.\r\n            \r\n            - <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Horizontal\" />: Panes are arranged side by side horizontally.\r\n            - <see cref=\"F:Syncfusion.Blazor.Layouts.Orientation.Vertical\" />: Panes are arranged one above the other vertically.\r\n            \r\n            Choose the appropriate orientation based on your desired layout and design.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Orientation=\"Orientation.Vertical\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.Orientation"}},{"Kind":"Components.Component","Name":"SeparatorSize","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.SeparatorSize\">\r\n            <summary>\r\n            Gets or sets the size of the separators between panes in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            The size of the separators, specified as a double value.\r\n            </value>\r\n            <remarks>\r\n            The separator size determines the width of the space between adjacent panes within the Splitter component.\r\n            \r\n            Example:\r\n            - Setting SeparatorSize to 10 will create a 10-pixel wide separator between adjacent panes.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter SeparatorSize=\"10\" Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"SeparatorSize","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.Width\">\r\n            <summary>\r\n            Gets or sets the width of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfSplitter\" /> component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n            <remarks>\r\n            The value can be either in pixel or percentage format.\r\n            </remarks>\r\n            <example>\r\n            <code><![CDATA[\r\n            <SfSplitter Height=\"240px\" Width=\"100%\">\r\n              <SplitterPanes>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Left Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n                   <SplitterPane>\r\n                      <ContentTemplate>\r\n                          <div> Right Pane</div>\r\n                      </ContentTemplate>\r\n                   </SplitterPane>\r\n               </SplitterPanes>\r\n            </SfSplitter>\r\n            ]]></code>\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.HtmlAttributes\">\r\n            <summary>\r\n            You can add the additional Html attributes such as id, title, etc., to the splitter element.\r\n            </summary>\r\n            <value>\r\n            A dictionary of additional HTML attributes for the root element of the component.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfSplitter","Common.TypeNameIdentifier":"SfSplitter","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":301461088,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfSplitter.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent\">\r\n            <summary>\r\n            Sets the content for panes of the Splitter.\r\n            </summary>\r\n            <value>\r\n            Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfSplitter"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfSplitter.ChildContent","Common.TypeNameIdentifier":"SfSplitter","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1891704016,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfSplitter.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent\">\r\n            <summary>\r\n            Sets the content for panes of the Splitter.\r\n            </summary>\r\n            <value>\r\n            Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.SfSplitter"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfSplitter.ChildContent","Common.TypeNameIdentifier":"SfSplitter","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":615814102,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SfTimeline","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SfTimeline\">\r\n            <summary> \r\n            The Blazor Timeline component presents a series of events or activities in chronological order, allowing users to track the progression of time.\r\n            </summary>\r\n            <remarks>\r\n            Timeline items can be populated by specifying <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> within <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> tag directive.\r\n            </remarks>\r\n            <example>\r\n            In the below code example, a basic Timeline component is initialized with <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> tag directive.\r\n            <code><![CDATA[ \r\n            <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem></TimelineItem>\r\n                    <TimelineItem></TimelineItem>\r\n                    <TimelineItem></TimelineItem>\r\n                    <TimelineItem></TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfTimeline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Layouts.TimelineAlignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Alignment\">\r\n            <summary>\r\n            Gets or sets the alignment of the item content in relation to the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n            <value>\r\n            A value indicates the alignment of timeline items. The default value is <see cref=\"F:Syncfusion.Blazor.Layouts.TimelineAlignment.After\" />.\r\n            </value>\r\n            <remarks>\r\n            Use this property to control the display of item content appear before or after each item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.TimelineAlignment"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ID\">\r\n            <summary>\r\n            Sets id attribute for the timeline element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.CssClass\">\r\n            <summary>\r\n            Gets or sets the custom CSS class to customize the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the CSS class to be applied. The default value is an empty string.\r\n            </value>\r\n            <remarks>\r\n            You can use this property to apply custom styles to the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component by specifying a CSS class.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Layouts.TimelineOrientation","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Orientation\">\r\n            <summary>\r\n            Gets or sets the orientation of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n            <remarks>\r\n            The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineOrientation\" /> enumeration defines the possible orientations for the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            You can set this property to control whether the timeline is displayed horizontally or vertically.\r\n            </remarks>\r\n            <value>\r\n            A <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineOrientation\" /> value representing the orientation of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" />.\r\n            The default value is <see cref=\"F:Syncfusion.Blazor.Layouts.TimelineOrientation.Vertical\" />.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.TimelineOrientation"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Reverse\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> items are rendered in reverse order.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the items are rendered in reverse order; otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Layouts.TimelineItemContext>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\">\r\n             <summary>\r\n             Gets or sets a template that defines the appearance of each item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\" /> allows you to define a custom template for rendering each step.\r\n             Use the template’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n            <SfTimeline>\r\n                <ChildContent>\r\n                    <TimelineItems>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-info\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-add\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-check\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-close\"></TimelineItem>\r\n                    </TimelineItems>\r\n                </ChildContent>\r\n                <Template>\r\n                    <div class=\"e-connector\">\r\n                        <span class=\"e-indicator @context.Item.IconCss\"></span>\r\n                    </div>\r\n                </Template>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Template","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Layouts.TimelineItemContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ChildContent\">\r\n            <summary>\r\n            Gets or sets a value that indicates the child content for the Timeline including HTML element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Created\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> rendering is completed.\r\n            </summary>\r\n            <value>\r\n            An event call back function.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Created","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ItemRendered\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a timeline item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component is rendered.\r\n            </summary>\r\n            <value>\r\n            An event callback function that is triggered when a item is rendered within the Timeline.\r\n            </value>\r\n            <remarks>\r\n            Subscribe to this event to perform additional actions or apply custom styling after a item has been rendered.\r\n            It provides an opportunity to dynamically modify the appearance or behavior of individual items during the rendering process.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfTimeline","Common.TypeNameIdentifier":"SfTimeline","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":2047270450,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.SfTimeline","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.SfTimeline\">\r\n            <summary> \r\n            The Blazor Timeline component presents a series of events or activities in chronological order, allowing users to track the progression of time.\r\n            </summary>\r\n            <remarks>\r\n            Timeline items can be populated by specifying <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> within <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> tag directive.\r\n            </remarks>\r\n            <example>\r\n            In the below code example, a basic Timeline component is initialized with <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> tag directive.\r\n            <code><![CDATA[ \r\n            <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem></TimelineItem>\r\n                    <TimelineItem></TimelineItem>\r\n                    <TimelineItem></TimelineItem>\r\n                    <TimelineItem></TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SfTimeline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Layouts.TimelineAlignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Alignment\">\r\n            <summary>\r\n            Gets or sets the alignment of the item content in relation to the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n            <value>\r\n            A value indicates the alignment of timeline items. The default value is <see cref=\"F:Syncfusion.Blazor.Layouts.TimelineAlignment.After\" />.\r\n            </value>\r\n            <remarks>\r\n            Use this property to control the display of item content appear before or after each item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.TimelineAlignment"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ID\">\r\n            <summary>\r\n            Sets id attribute for the timeline element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"ID","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.CssClass\">\r\n            <summary>\r\n            Gets or sets the custom CSS class to customize the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n            <value>\r\n            A string representing the CSS class to be applied. The default value is an empty string.\r\n            </value>\r\n            <remarks>\r\n            You can use this property to apply custom styles to the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component by specifying a CSS class.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Syncfusion.Blazor.Layouts.TimelineOrientation","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Orientation\">\r\n            <summary>\r\n            Gets or sets the orientation of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n            <remarks>\r\n            The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineOrientation\" /> enumeration defines the possible orientations for the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            You can set this property to control whether the timeline is displayed horizontally or vertically.\r\n            </remarks>\r\n            <value>\r\n            A <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineOrientation\" /> value representing the orientation of the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" />.\r\n            The default value is <see cref=\"F:Syncfusion.Blazor.Layouts.TimelineOrientation.Vertical\" />.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.TimelineOrientation"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Reverse\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> items are rendered in reverse order.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the items are rendered in reverse order; otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Layouts.TimelineItemContext>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\">\r\n             <summary>\r\n             Gets or sets a template that defines the appearance of each item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\" /> allows you to define a custom template for rendering each step.\r\n             Use the template’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n            <SfTimeline>\r\n                <ChildContent>\r\n                    <TimelineItems>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-info\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-add\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-check\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-close\"></TimelineItem>\r\n                    </TimelineItems>\r\n                </ChildContent>\r\n                <Template>\r\n                    <div class=\"e-connector\">\r\n                        <span class=\"e-indicator @context.Item.IconCss\"></span>\r\n                    </div>\r\n                </Template>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Template","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Layouts.TimelineItemContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ChildContent\">\r\n            <summary>\r\n            Gets or sets a value that indicates the child content for the Timeline including HTML element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Created","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Created\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> rendering is completed.\r\n            </summary>\r\n            <value>\r\n            An event call back function.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Created","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ItemRendered\">\r\n            <summary>\r\n            Gets or sets an event callback that is raised when a timeline item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component is rendered.\r\n            </summary>\r\n            <value>\r\n            An event callback function that is triggered when a item is rendered within the Timeline.\r\n            </value>\r\n            <remarks>\r\n            Subscribe to this event to perform additional actions or apply custom styling after a item has been rendered.\r\n            It provides an opportunity to dynamically modify the appearance or behavior of individual items during the rendering process.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfTimeline","Common.TypeNameIdentifier":"SfTimeline","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1461714664,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfTimeline.Template","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\">\r\n             <summary>\r\n             Gets or sets a template that defines the appearance of each item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\" /> allows you to define a custom template for rendering each step.\r\n             Use the template’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n            <SfTimeline>\r\n                <ChildContent>\r\n                    <TimelineItems>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-info\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-add\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-check\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-close\"></TimelineItem>\r\n                    </TimelineItems>\r\n                </ChildContent>\r\n                <Template>\r\n                    <div class=\"e-connector\">\r\n                        <span class=\"e-indicator @context.Item.IconCss\"></span>\r\n                    </div>\r\n                </Template>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"SfTimeline"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Template"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfTimeline.Template","Common.TypeNameIdentifier":"SfTimeline","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":367052803,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfTimeline.Template","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\">\r\n             <summary>\r\n             Gets or sets a template that defines the appearance of each item in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"P:Syncfusion.Blazor.Layouts.SfTimeline.Template\" /> allows you to define a custom template for rendering each step.\r\n             Use the template’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n            <SfTimeline>\r\n                <ChildContent>\r\n                    <TimelineItems>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-info\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-add\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-check\"></TimelineItem>\r\n                        <TimelineItem IconCss = \"e-icons e-circle-close\"></TimelineItem>\r\n                    </TimelineItems>\r\n                </ChildContent>\r\n                <Template>\r\n                    <div class=\"e-connector\">\r\n                        <span class=\"e-indicator @context.Item.IconCss\"></span>\r\n                    </div>\r\n                </Template>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Layouts.SfTimeline"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Template"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfTimeline.Template","Common.TypeNameIdentifier":"SfTimeline","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1140440494,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfTimeline.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ChildContent\">\r\n            <summary>\r\n            Gets or sets a value that indicates the child content for the Timeline including HTML element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfTimeline"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfTimeline.ChildContent","Common.TypeNameIdentifier":"SfTimeline","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":837714717,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.SfTimeline.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.SfTimeline.ChildContent\">\r\n            <summary>\r\n            Gets or sets a value that indicates the child content for the Timeline including HTML element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.SfTimeline"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SfTimeline.ChildContent","Common.TypeNameIdentifier":"SfTimeline","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":357147427,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.TimelineItem","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.TimelineItem\">\r\n            <summary>\r\n            A class that represents items of <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimelineItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DotCss","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.DotCss\">\r\n            <summary>\r\n            Gets or sets the CSS class for the icon associated with the <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" />.\r\n            </summary>\r\n            <value>\r\n            A string representing the CSS class for the icon. The default value is an empty string.\r\n            </value>\r\n            <remarks>\r\n            The icon CSS class is used to style the icon displayed for the timeline item. If specified, it determines the visual representation of the item.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"DotCss","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Layouts.TimelineItemContext>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.Content\">\r\n             <summary>\r\n             Gets or sets the custom content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom content template for rendering each item.\r\n             Use the content’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks> \r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Layouts.TimelineItemContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OppositeContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Layouts.TimelineItemContext>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent\">\r\n             <summary>\r\n             Gets or sets the custom opposite text content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom opposite text content template for rendering each item.\r\n             Use the oppositeContent’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                        <OppositeContent>10:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                        <OppositeContent>11:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                        <OppositeContent>12:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                        <OppositeContent>01:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OppositeContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Layouts.TimelineItemContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.CssClass\">\r\n            <summary>\r\n            Gets or sets the custom CSS class for customize the appearance of timeline item.\r\n            </summary>\r\n            <value>\r\n            A string representing the CSS class to be applied to the item. The default value is an empty string.\r\n            </value>\r\n            <remarks>\r\n            You can use this property to apply custom styles to individual items within the Timeline component by specifying a CSS class.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.Disabled\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the timeline item is disabled.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the item is disabled; otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItem","Common.TypeNameIdentifier":"TimelineItem","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":1801924016,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.TimelineItem","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.TimelineItem\">\r\n            <summary>\r\n            A class that represents items of <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.TimelineItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DotCss","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.DotCss\">\r\n            <summary>\r\n            Gets or sets the CSS class for the icon associated with the <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" />.\r\n            </summary>\r\n            <value>\r\n            A string representing the CSS class for the icon. The default value is an empty string.\r\n            </value>\r\n            <remarks>\r\n            The icon CSS class is used to style the icon displayed for the timeline item. If specified, it determines the visual representation of the item.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"DotCss","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Layouts.TimelineItemContext>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.Content\">\r\n             <summary>\r\n             Gets or sets the custom content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom content template for rendering each item.\r\n             Use the content’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks> \r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Layouts.TimelineItemContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OppositeContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Layouts.TimelineItemContext>","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent\">\r\n             <summary>\r\n             Gets or sets the custom opposite text content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom opposite text content template for rendering each item.\r\n             Use the oppositeContent’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                        <OppositeContent>10:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                        <OppositeContent>11:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                        <OppositeContent>12:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                        <OppositeContent>01:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","Metadata":{"Common.PropertyName":"OppositeContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Layouts.TimelineItemContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.CssClass\">\r\n            <summary>\r\n            Gets or sets the custom CSS class for customize the appearance of timeline item.\r\n            </summary>\r\n            <value>\r\n            A string representing the CSS class to be applied to the item. The default value is an empty string.\r\n            </value>\r\n            <remarks>\r\n            You can use this property to apply custom styles to individual items within the Timeline component by specifying a CSS class.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.Disabled\">\r\n            <summary>\r\n            Gets or sets a value indicating whether the timeline item is disabled.\r\n            </summary>\r\n            <value>\r\n            <c>true</c> if the item is disabled; otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItem","Common.TypeNameIdentifier":"TimelineItem","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-390325644,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.TimelineItem.Content","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.Content\">\r\n             <summary>\r\n             Gets or sets the custom content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom content template for rendering each item.\r\n             Use the content’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks> \r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"TimelineItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Content"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItem.Content","Common.TypeNameIdentifier":"TimelineItem","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-656921154,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.TimelineItem.Content","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.Content\">\r\n             <summary>\r\n             Gets or sets the custom content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom content template for rendering each item.\r\n             Use the content’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks> \r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Syncfusion.Blazor.Layouts.TimelineItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Content"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItem.Content","Common.TypeNameIdentifier":"TimelineItem","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1258903662,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent\">\r\n             <summary>\r\n             Gets or sets the custom opposite text content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom opposite text content template for rendering each item.\r\n             Use the oppositeContent’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                        <OppositeContent>10:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                        <OppositeContent>11:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                        <OppositeContent>12:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                        <OppositeContent>01:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OppositeContent","ParentTag":"TimelineItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["OppositeContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent","Common.TypeNameIdentifier":"TimelineItem","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2025503582,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent\">\r\n             <summary>\r\n             Gets or sets the custom opposite text content template for rendering individual items in the <see cref=\"T:Syncfusion.Blazor.Layouts.SfTimeline\" /> component.\r\n             </summary>\r\n             <value>\r\n             The template content. The default value is <c>null</c>.\r\n             </value>\r\n             <remarks>\r\n             The <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" /> allows you to define a custom opposite text content template for rendering each item.\r\n             Use the oppositeContent’s context parameter to access <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item\" /> and <see cref=\"P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex\" /> properties.\r\n             </remarks>\r\n             <example>\r\n             <code><![CDATA[\r\n             <SfTimeline>\r\n                <TimelineItems>\r\n                    <TimelineItem>\r\n                        <Content>Ordered</Content>\r\n                        <OppositeContent>10:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Processing</Content>\r\n                        <OppositeContent>11:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Shipped</Content>\r\n                        <OppositeContent>12:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                        <Content>Delivered</Content>\r\n                        <OppositeContent>01:30 am</OppositeContent>\r\n                    </TimelineItem>\r\n                </TimelineItems>\r\n            </SfTimeline>\r\n             ]]></code>\r\n             </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OppositeContent","ParentTag":"Syncfusion.Blazor.Layouts.TimelineItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["OppositeContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent","Common.TypeNameIdentifier":"TimelineItem","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2015017843,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.TimelineItems","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.TimelineItems\">\r\n            <summary>\r\n            Represents a collection of <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimelineItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItems.ChildContent\">\r\n            <exclude />\r\n            <summary>\r\n            Gets or sets the child content for the TimelineItem (Child) from the Timeline(Parent) .\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItems","Common.TypeNameIdentifier":"TimelineItems","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":-236445128,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.TimelineItems","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.TimelineItems\">\r\n            <summary>\r\n            Represents a collection of <see cref=\"T:Syncfusion.Blazor.Layouts.TimelineItem\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.TimelineItems"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItems.ChildContent\">\r\n            <exclude />\r\n            <summary>\r\n            Gets or sets the child content for the TimelineItem (Child) from the Timeline(Parent) .\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItems","Common.TypeNameIdentifier":"TimelineItems","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1167561043,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.TimelineItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItems.ChildContent\">\r\n            <exclude />\r\n            <summary>\r\n            Gets or sets the child content for the TimelineItem (Child) from the Timeline(Parent) .\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TimelineItems"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItems.ChildContent","Common.TypeNameIdentifier":"TimelineItems","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-740736022,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Layouts.TimelineItems.ChildContent","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.TimelineItems.ChildContent\">\r\n            <exclude />\r\n            <summary>\r\n            Gets or sets the child content for the TimelineItem (Child) from the Timeline(Parent) .\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Layouts.TimelineItems"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.TimelineItems.ChildContent","Common.TypeNameIdentifier":"TimelineItems","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2113163483,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts._Imports","AssemblyName":"Syncfusion.Blazor.Layouts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Runtime.Name":"Components.IComponent"}},{"HashCode":602752098,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts._Imports","AssemblyName":"Syncfusion.Blazor.Layouts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts._Imports"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-332388764,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.Internal.Pane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.Internal.Pane\">\r\n            <summary>\r\n            Defines the splitter pane.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Pane"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PaneIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneIndex\">\r\n            <summary>\r\n            Specifies the current pane index.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PaneSetting","TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneSetting\">\r\n            <summary>\r\n            Defines the PaneSettings.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneSetting","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.SplitterPane"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.Internal.Pane","Common.TypeNameIdentifier":"Pane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts.Internal","Runtime.Name":"Components.IComponent"}},{"HashCode":1360039040,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.Internal.Pane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.Internal.Pane\">\r\n            <summary>\r\n            Defines the splitter pane.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.Internal.Pane"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PaneIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneIndex\">\r\n            <summary>\r\n            Specifies the current pane index.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PaneSetting","TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneSetting\">\r\n            <summary>\r\n            Defines the PaneSettings.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneSetting","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.SplitterPane"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.Internal.Pane","Common.TypeNameIdentifier":"Pane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-864027064,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.Internal.Panes","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.Internal.Panes\">\r\n            <summary>\r\n            Used to render the panes.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Panes"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.Internal.Panes","Common.TypeNameIdentifier":"Panes","Common.TypeNamespace":"Syncfusion.Blazor.Layouts.Internal","Runtime.Name":"Components.IComponent"}},{"HashCode":-1847497787,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.Internal.Panes","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.Internal.Panes\">\r\n            <summary>\r\n            Used to render the panes.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.Internal.Panes"}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.Internal.Panes","Common.TypeNameIdentifier":"Panes","Common.TypeNamespace":"Syncfusion.Blazor.Layouts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-403032961,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.Internal.Separator","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.Internal.Separator\">\r\n            <summary>\r\n            Class for create the separator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Separator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PaneIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneIndex\">\r\n            <summary>\r\n            Defines the current pane index.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PaneSetting","TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneSetting\">\r\n            <summary>\r\n            Defines the current pane PaneSettings value.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneSetting","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.SplitterPane"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.Internal.Separator","Common.TypeNameIdentifier":"Separator","Common.TypeNamespace":"Syncfusion.Blazor.Layouts.Internal","Runtime.Name":"Components.IComponent"}},{"HashCode":294328681,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Layouts.Internal.Separator","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":"<member name=\"T:Syncfusion.Blazor.Layouts.Internal.Separator\">\r\n            <summary>\r\n            Class for create the separator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.Internal.Separator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PaneIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneIndex\">\r\n            <summary>\r\n            Defines the current pane index.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PaneSetting","TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Documentation":"<member name=\"P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneSetting\">\r\n            <summary>\r\n            Defines the current pane PaneSettings value.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.PropertyName":"PaneSetting","Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Layouts.SplitterPane"}}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.Internal.Separator","Common.TypeNameIdentifier":"Separator","Common.TypeNamespace":"Syncfusion.Blazor.Layouts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-727369005,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocus","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocus","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocus"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocus"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1653693213,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onblur","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onblur","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onblur"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onblur"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":778364182,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocusin","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocusin","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocusin"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocusin"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-517322429,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocusout","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocusout","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocusout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocusout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-936888182,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseover","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseover","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2029089480,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseout","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseout","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1210532359,"Kind":"Components.EventHandler","Name":"onmouseleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseleave","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseleave","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1179986610,"Kind":"Components.EventHandler","Name":"onmouseenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseenter","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseenter","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-392837186,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousemove","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmousemove","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousemove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousemove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1242953820,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousedown","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmousedown","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousedown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousedown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1914736575,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseup","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseup","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1331383727,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onclick"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onclick"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":536006733,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondblclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@ondblclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondblclick"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondblclick"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-366485848,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onwheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":{"Id":14,"Args":["@onwheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onwheel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onwheel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-160573819,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousewheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":{"Id":14,"Args":["@onmousewheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousewheel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousewheel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1538066542,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncontextmenu","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@oncontextmenu","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncontextmenu"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncontextmenu"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1705523732,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondrag","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondrag","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondrag"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondrag"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1290771231,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragend","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragend","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-337171814,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragenter","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragenter","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1201691127,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragleave","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragleave","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-519835019,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragover","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragover","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-202939013,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragstart","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragstart","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":364403475,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondrop","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondrop","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondrop"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondrop"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1929574430,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeydown","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeydown","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeydown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeydown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":110467606,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeyup","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeyup","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeyup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeyup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":582697943,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeypress","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeypress","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeypress"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeypress"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-365542076,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onchange","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":{"Id":14,"Args":["@onchange","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":794708869,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oninput","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":{"Id":14,"Args":["@oninput","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oninput"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oninput"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1603213185,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oninvalid","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oninvalid","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oninvalid"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oninvalid"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":836426675,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onreset","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onreset","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onreset"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onreset"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1485878008,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselect","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselect","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselect"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselect"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1818652440,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselectstart","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselectstart","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselectstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselectstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-758644927,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselectionchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselectionchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselectionchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselectionchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1853778474,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onsubmit","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onsubmit","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onsubmit"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onsubmit"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1478138657,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforecopy","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforecopy","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforecopy"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforecopy"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1954762307,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforecut","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforecut","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforecut"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforecut"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":68240426,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforepaste","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforepaste","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforepaste"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforepaste"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1936131299,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncopy","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@oncopy","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncopy"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncopy"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-651207526,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncut","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@oncut","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncut"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncut"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1089411740,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpaste","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@onpaste","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpaste"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpaste"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-679554340,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchcancel","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchcancel","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchcancel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchcancel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":943674983,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchend","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchend","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":257218252,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchmove","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchmove","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchmove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchmove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":2036593677,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchstart","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchstart","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1103757234,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchenter","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchenter","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-530801748,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchleave","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchleave","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1577454197,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ongotpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@ongotpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ongotpointercapture"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ongotpointercapture"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2091195272,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onlostpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onlostpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onlostpointercapture"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onlostpointercapture"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2045316255,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointercancel","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointercancel","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointercancel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointercancel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1382687032,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerdown","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerdown","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerdown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerdown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":101473625,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerenter","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerenter","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1542789096,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerleave","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerleave","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1970868744,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointermove","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointermove","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointermove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointermove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1496598645,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerout","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerout","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-80282310,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerover","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerover","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1553651268,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerup","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerup","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-536806730,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncanplay","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncanplay","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncanplay"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncanplay"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":908414765,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncanplaythrough","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncanplaythrough","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncanplaythrough"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncanplaythrough"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-129079417,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncuechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncuechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncuechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncuechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":790156873,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondurationchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ondurationchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondurationchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondurationchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":476976603,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onemptied","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onemptied","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onemptied"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onemptied"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1456525810,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpause","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpause","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpause"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpause"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":177399041,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onplay","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onplay","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onplay"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onplay"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1969236839,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onplaying","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onplaying","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onplaying"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onplaying"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-738595097,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onratechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onratechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onratechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onratechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-955105252,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onseeked","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onseeked","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onseeked"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onseeked"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-187878019,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onseeking","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onseeking","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onseeking"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onseeking"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1115466435,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onstalled","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onstalled","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onstalled"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onstalled"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":14718909,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onstop","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onstop","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onstop"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onstop"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1798193991,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onsuspend","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onsuspend","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onsuspend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onsuspend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-83598432,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontimeupdate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ontimeupdate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontimeupdate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontimeupdate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-546088352,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onvolumechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onvolumechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onvolumechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onvolumechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-147712496,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onwaiting","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onwaiting","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onwaiting"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onwaiting"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1877397063,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadstart","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onloadstart","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-93156651,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontimeout","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@ontimeout","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontimeout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontimeout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1530156502,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onabort","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onabort","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onabort"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onabort"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":841018137,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onload","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onload","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onload"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onload"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1646323413,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadend","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onloadend","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1805914554,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onprogress","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onprogress","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onprogress"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onprogress"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1414019166,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onerror","Microsoft.AspNetCore.Components.Web.ErrorEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":{"Id":14,"Args":["@onerror","Microsoft.AspNetCore.Components.Web.ErrorEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1684286683,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1877185334,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1604892650,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforedeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforedeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforedeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforedeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":455610339,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ondeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":484371961,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onended","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onended","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onended"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onended"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":2000527016,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfullscreenchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onfullscreenchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfullscreenchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfullscreenchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1453016704,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfullscreenerror","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onfullscreenerror","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfullscreenerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfullscreenerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1255032978,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadeddata","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onloadeddata","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadeddata"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadeddata"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":166892546,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadedmetadata","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onloadedmetadata","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadedmetadata"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadedmetadata"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1619086998,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerlockchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpointerlockchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerlockchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerlockchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":183890027,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerlockerror","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpointerlockerror","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerlockerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerlockerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-960344618,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onreadystatechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onreadystatechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onreadystatechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onreadystatechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":823383190,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onscroll","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onscroll","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onscroll"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onscroll"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":830423229,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontoggle","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ontoggle","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontoggle"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontoggle"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1658677927,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":19},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":{"Id":19},"Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes","Components.IsSpecialKind":"Components.Splat","Runtime.Name":"Components.None"}},{"HashCode":-1635625292,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"a","Attributes":[{"Name":"asp-action"}]},{"TagName":"a","Attributes":[{"Name":"asp-controller"}]},{"TagName":"a","Attributes":[{"Name":"asp-area"}]},{"TagName":"a","Attributes":[{"Name":"asp-page"}]},{"TagName":"a","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"a","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"a","Attributes":[{"Name":"asp-host"}]},{"TagName":"a","Attributes":[{"Name":"asp-protocol"}]},{"TagName":"a","Attributes":[{"Name":"asp-route"}]},{"TagName":"a","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"a","Attributes":[{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-protocol","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol\">\r\n            <summary>\r\n            The protocol for the URL, such as \"http\" or \"https\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Protocol"}},{"Kind":"ITagHelper","Name":"asp-host","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host\">\r\n            <summary>\r\n            The host name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Host"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment\">\r\n            <summary>\r\n            The URL fragment name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\r\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","Common.TypeNameIdentifier":"AnchorTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":1501777474,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"cache"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"priority","TypeName":"Microsoft.Extensions.Caching.Memory.CacheItemPriority?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Priority"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","Common.TypeNameIdentifier":"CacheTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":1067065902,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"component","TagStructure":2,"Attributes":[{"Name":"type"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"params","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","IndexerNamePrefix":"param-","IndexerTypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters\">\r\n            <summary>\r\n            Gets or sets values for component parameters.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType\">\r\n            <summary>\r\n            Gets or sets the component type. This value is required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ComponentType"}},{"Kind":"ITagHelper","Name":"render-mode","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.RenderMode","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RenderMode"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","Common.TypeNameIdentifier":"ComponentTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":1303231203,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"distributed-cache","Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name\">\r\n            <summary>\r\n            Gets or sets a unique name to discriminate cached entries.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","Common.TypeNameIdentifier":"DistributedCacheTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-1107305569,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\r\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\r\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"environment"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"names","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Names"}},{"Kind":"ITagHelper","Name":"include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Include"}},{"Kind":"ITagHelper","Name":"exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Exclude"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","Common.TypeNameIdentifier":"EnvironmentTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":1496735038,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\r\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"button","Attributes":[{"Name":"asp-action"}]},{"TagName":"button","Attributes":[{"Name":"asp-controller"}]},{"TagName":"button","Attributes":[{"Name":"asp-area"}]},{"TagName":"button","Attributes":[{"Name":"asp-page"}]},{"TagName":"button","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"button","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"button","Attributes":[{"Name":"asp-route"}]},{"TagName":"button","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"button","Attributes":[{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","Common.TypeNameIdentifier":"FormActionTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":126514257,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"form"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-antiforgery","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery\">\r\n            <summary>\r\n            Whether the antiforgery token should be generated.\r\n            </summary>\r\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\r\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\r\n        </member>","Metadata":{"Common.PropertyName":"Antiforgery"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","Common.TypeNameIdentifier":"FormTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-835993632,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"asp-append-version"},{"Name":"src"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src\">\r\n            <summary>\r\n            Source of the image.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the src urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","Common.TypeNameIdentifier":"ImageTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":242193453,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-format","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\">\r\n            <summary>\r\n            The format string (see <see href=\"https://msdn.microsoft.com/en-us/library/txafckwd.aspx\" />) used to format the\r\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\r\n            </summary>\r\n            <remarks>\r\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\r\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\r\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\">\r\n            <summary>\r\n            The type of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\r\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\r\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\r\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InputTypeName"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value\">\r\n            <summary>\r\n            The value of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\r\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","Common.TypeNameIdentifier":"InputTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-1039086171,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"label","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","Common.TypeNameIdentifier":"LabelTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-1394407878,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'href' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-class"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-property"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-value"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"href","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href\">\r\n            <summary>\r\n            Address of the linked resource.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Href"}},{"Kind":"ITagHelper","Name":"asp-href-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HrefInclude"}},{"Kind":"ITagHelper","Name":"asp-href-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\">\r\n            <summary>\r\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHref"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the href urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\r\n            one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHrefInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-class","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\">\r\n            <summary>\r\n            The class name defined in the stylesheet to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestClass"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-property","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\">\r\n            <summary>\r\n            The CSS property name to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestProperty"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\">\r\n            <summary>\r\n            The CSS property value to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestValue"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","Common.TypeNameIdentifier":"LinkTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":663111948,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\r\n            </summary>\r\n            <remarks>\r\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\r\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\r\n            in some cases.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"option"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value\">\r\n            <summary>\r\n            Specifies a value for the &lt;option&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","Common.TypeNameIdentifier":"OptionTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-1606513186,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper\">\r\n            <summary>\r\n            Renders a partial view.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"partial","TagStructure":2,"Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\">\r\n            <summary>\r\n            The name or path of the partial view that is rendered to the response.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\">\r\n            <summary>\r\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"ITagHelper","Name":"optional","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional\">\r\n            <summary>\r\n            When optional, executing the tag helper will no-op if the view cannot be located.\r\n            Otherwise will throw stating the view could not be found.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Optional"}},{"Kind":"ITagHelper","Name":"fallback-name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName\">\r\n            <summary>\r\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackName"}},{"Kind":"ITagHelper","Name":"view-data","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary","IndexerNamePrefix":"view-data-","IndexerTypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ViewData"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","Common.TypeNameIdentifier":"PartialTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":597222171,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"persist-component-state","TagStructure":2}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"persist-mode","TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PersistenceMode"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","Common.TypeNameIdentifier":"PersistComponentStateTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":1022418279,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"script","Attributes":[{"Name":"asp-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-test"}]},{"TagName":"script","Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src\">\r\n            <summary>\r\n            Address of the external script to use.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-src-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SrcInclude"}},{"Kind":"ITagHelper","Name":"asp-src-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\">\r\n            <summary>\r\n            The URL of a Script tag to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrc"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to src urls.\r\n            </summary>\r\n            <remarks>\r\n            A query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\r\n            primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrcInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression\">\r\n            <summary>\r\n            The script method defined in the primary script to use for the fallback test.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestExpression"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","Common.TypeNameIdentifier":"ScriptTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-554474441,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\r\n            <c>asp-items</c> attribute(s).\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"asp-for"}]},{"TagName":"select","Attributes":[{"Name":"asp-items"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-items","TypeName":"System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items\">\r\n            <summary>\r\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\r\n            &lt;optgroup&gt; and &lt;option&gt; elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","Common.TypeNameIdentifier":"SelectTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":915989612,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","Common.TypeNameIdentifier":"TextAreaTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":2070480479,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\r\n            attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"span","Attributes":[{"Name":"asp-validation-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For\">\r\n            <summary>\r\n            Gets an expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","Common.TypeNameIdentifier":"ValidationMessageTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":711690974,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\r\n            attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"div","Attributes":[{"Name":"asp-validation-summary"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-summary","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\">\r\n            <summary>\r\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\r\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\r\n            </summary>\r\n            <exception cref=\"T:System.ArgumentException\">\r\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\r\n            <c>(ValidationSummary)23</c>.\r\n            </exception>\r\n        </member>","Metadata":{"Common.PropertyName":"ValidationSummary"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","Common.TypeNameIdentifier":"ValidationSummaryTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":-1357427151,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.Razor","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\r\n            </summary>\r\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\r\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\r\n            application-relative URLs are resolved.</remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"itemid","Value":"~/","ValueComparison":2}]},{"TagName":"a","Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"applet","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"area","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"audio","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"base","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"blockquote","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"button","Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"del","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"embed","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"form","Attributes":[{"Name":"action","Value":"~/","ValueComparison":2}]},{"TagName":"html","Attributes":[{"Name":"manifest","Value":"~/","ValueComparison":2}]},{"TagName":"iframe","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"ins","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"menuitem","Attributes":[{"Name":"icon","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"data","Value":"~/","ValueComparison":2}]},{"TagName":"q","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"script","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"track","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"poster","Value":"~/","ValueComparison":2}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","Common.TypeNameIdentifier":"UrlResolutionTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers","Runtime.Name":"ITagHelper"}},{"HashCode":87783689,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":0},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":{"Id":0},"Metadata":{"Common.PropertyName":"Bind","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":2},"Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":1,"Args":["@bind-..."]},"Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind","Common.TypeNameIdentifier":"Bind","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.Bind.Fallback":"True","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1886728056,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-751468505,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-897546298,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["checked","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["checked","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.TypeAttribute":"checkbox","Components.Bind.ValueAttribute":"checked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2077438364,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.TypeAttribute":"text","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-478655573,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"number","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1727219745,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"number","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1609103576,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"date","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-263506177,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"date","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1699770350,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"datetime-local","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1138129442,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"datetime-local","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-342334592,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"month","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2016351310,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"month","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-3753525,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"HH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"time","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-191892789,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"HH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"time","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-380241744,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"select","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1598759353,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"textarea","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1453794211,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":{"Id":10,"Args":["ActiveBreakpoint","ActiveBreakpointChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveBreakpoint:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveBreakpoint","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["ActiveBreakpoint","ActiveBreakpointChanged"]},"Metadata":{"Common.PropertyName":"ActiveBreakpoint","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Common.TypeNameIdentifier":"SfMediaQuery","Common.TypeNamespace":"Syncfusion.Blazor","Components.Bind.ChangeAttribute":"ActiveBreakpointChanged","Components.Bind.ValueAttribute":"ActiveBreakpoint","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1369953346,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":{"Id":10,"Args":["ActiveBreakpoint","ActiveBreakpointChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveBreakpoint:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveBreakpoint","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["ActiveBreakpoint","ActiveBreakpointChanged"]},"Metadata":{"Common.PropertyName":"ActiveBreakpoint","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Common.TypeNameIdentifier":"SfMediaQuery","Common.TypeNamespace":"Syncfusion.Blazor","Components.Bind.ChangeAttribute":"ActiveBreakpointChanged","Components.Bind.ValueAttribute":"ActiveBreakpoint","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1728660936,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-135059254,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2079193430,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1332181074,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1272104786,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2049750376,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-233555445,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-785714819,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2032267197,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":811581651,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1148665271,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-115855893,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-403255426,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":721455144,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-365351340,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Collapsed","CollapsedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Collapsed","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Collapsed:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Collapsed:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Collapsed","CollapsedChanged"]},"Metadata":{"Common.PropertyName":"Collapsed","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"CollapsedChanged","Components.Bind.ValueAttribute":"Collapsed","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":267439760,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Max","MaxChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Max","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Max:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Max:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Max","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Max","MaxChanged"]},"Metadata":{"Common.PropertyName":"Max","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"MaxChanged","Components.Bind.ValueAttribute":"Max","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-484408600,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Min","MinChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Min","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Min:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Min:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Min","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Min","MinChanged"]},"Metadata":{"Common.PropertyName":"Min","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"MinChanged","Components.Bind.ValueAttribute":"Min","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-129239200,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Size","SizeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Size","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SplitterPane","Attributes":[{"Name":"@bind-Size:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Size:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Size","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Size","SizeChanged"]},"Metadata":{"Common.PropertyName":"Size","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"SizeChanged","Components.Bind.ValueAttribute":"Size","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":437043127,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Collapsed","CollapsedChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Collapsed","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Collapsed:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Collapsed:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Collapsed","CollapsedChanged"]},"Metadata":{"Common.PropertyName":"Collapsed","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"CollapsedChanged","Components.Bind.ValueAttribute":"Collapsed","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1006780301,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Max","MaxChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Max","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Max:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Max:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Max","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Max","MaxChanged"]},"Metadata":{"Common.PropertyName":"Max","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"MaxChanged","Components.Bind.ValueAttribute":"Max","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1146519618,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Min","MinChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Min","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Min:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Min:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Min","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Min","MinChanged"]},"Metadata":{"Common.PropertyName":"Min","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"MinChanged","Components.Bind.ValueAttribute":"Min","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":354930488,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Layouts.SplitterPane","AssemblyName":"Syncfusion.Blazor.Layouts","Documentation":{"Id":10,"Args":["Size","SizeChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Size","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Layouts.SplitterPane","Attributes":[{"Name":"@bind-Size:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Size:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Size","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Size","SizeChanged"]},"Metadata":{"Common.PropertyName":"Size","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Syncfusion.Blazor.Layouts.SplitterPane","Common.TypeNameIdentifier":"SplitterPane","Common.TypeNamespace":"Syncfusion.Blazor.Layouts","Components.Bind.ChangeAttribute":"SizeChanged","Components.Bind.ValueAttribute":"Size","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1143631698,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":18},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":{"Id":18},"Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref","Components.IsSpecialKind":"Components.Ref","Runtime.Name":"Components.None"}},{"HashCode":-1000828397,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":17},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":{"Id":17},"Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key","Components.IsSpecialKind":"Components.Key","Runtime.Name":"Components.None"}}],"CSharpLanguageVersion":1100},"RootNamespace":"Dr_WalletC","Documents":[{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\FetchData.razor","TargetPath":"Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Counter.razor","TargetPath":"Pages\\Counter.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Entry.razor","TargetPath":"Pages\\Entry.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\_ViewImports.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\_ViewImports.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\BopForm.razor","TargetPath":"Pages\\BopForm.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\_StatusMessage.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\_StatusMessage.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Shared\\_LoginPartial.cshtml","TargetPath":"Pages\\Shared\\_LoginPartial.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Shared\\_Layout.cshtml","TargetPath":"Pages\\Shared\\_Layout.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Login.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Login.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Shared\\LoginDisplay.razor","TargetPath":"Shared\\LoginDisplay.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml","TargetPath":"Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\_Layout.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\_Layout.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Shared\\_ValidationScriptsPartial.cshtml","TargetPath":"Pages\\Shared\\_ValidationScriptsPartial.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\LogOut.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\LogOut.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Tally.razor","TargetPath":"Pages\\Tally.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Shared\\ChartPie.razor","TargetPath":"Shared\\ChartPie.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\_StatusMessage.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\_StatusMessage.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\_ManageNav.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\_ManageNav.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Error.cshtml","TargetPath":"Areas\\Identity\\Pages\\Error.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Register.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Register.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\_ViewImports.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\_ViewImports.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Shared\\Chart.razor","TargetPath":"Shared\\Chart.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\_ViewStart.cshtml","TargetPath":"Areas\\Identity\\Pages\\_ViewStart.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Lockout.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\_ViewImports.cshtml","TargetPath":"Areas\\Identity\\Pages\\_ViewImports.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\_Host.cshtml","TargetPath":"Pages\\_Host.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\_ViewImports.cshtml","TargetPath":"Pages\\_ViewImports.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Error.cshtml","TargetPath":"Pages\\Error.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Pages\\Summary.razor","TargetPath":"Pages\\Summary.razor","FileKind":"component"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\user\\OneDrive\\デスクトップ\\GitHub2\\Dr_WalletC\\Dr_WalletC\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml","FileKind":"mvc"}],"SerializationFormat":"0.3"}